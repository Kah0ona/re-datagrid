{
"version":3,
"file":"goog.async.freelist.js",
"lineCount":40,
"mappings":"AAAA,IAAA,CAAA,UAAA,CAAA,QAAA,CAAA,OAAA,CAAA;AAAA,cAAA;AAaAA,MAAKC,CAAAA,MAAL,CAAY,qBAAZ,CAAA;AACAD,MAAKC,CAAAA,MAAOC,CAAAA,sBAAZ,EAAA;AAGA,OAAMC,SAAN;AAMEC,eAAW,CAACC,MAAD,EAASC,KAAT,EAAgBC,KAAhB,CAAuB;AAEhC,UAAKC,CAAAA,MAAL,GAAcD,KAAd;AAEA,UAAKE,CAAAA,OAAL,GAAeJ,MAAf;AAEA,UAAKK,CAAAA,MAAL,GAAcJ,KAAd;AAGA,UAAKK,CAAAA,UAAL,GAAkB,CAAlB;AAEA,UAAKC,CAAAA,KAAL,GAAa,IAAb;AAXgC;AAelCC,OAAG,EAAG;AACJ,UAAIC,IAAJ;AACA,UAAI,IAAKH,CAAAA,UAAT,GAAsB,CAAtB,CAAyB;AACvB,YAAKA,CAAAA,UAAL,EAAA;AACAG,YAAA,GAAO,IAAKF,CAAAA,KAAZ;AACA,YAAKA,CAAAA,KAAL,GAAaE,IAAKC,CAAAA,IAAlB;AACAD,YAAKC,CAAAA,IAAL,GAAY,IAAZ;AAJuB,OAAzB;AAMED,YAAA,GAAO,IAAKL,CAAAA,OAAL,EAAP;AANF;AAQA,aAAOK,IAAP;AAVI;AAcNE,OAAG,CAACF,IAAD,CAAO;AACR,UAAKJ,CAAAA,MAAL,CAAYI,IAAZ,CAAA;AACA,UAAI,IAAKH,CAAAA,UAAT,GAAsB,IAAKH,CAAAA,MAA3B,CAAmC;AACjC,YAAKG,CAAAA,UAAL,EAAA;AACAG,YAAKC,CAAAA,IAAL,GAAY,IAAKH,CAAAA,KAAjB;AACA,YAAKA,CAAAA,KAAL,GAAaE,IAAb;AAHiC;AAF3B;AAcVG,aAAS,EAAG;AACV,aAAO,IAAKN,CAAAA,UAAZ;AADU;AAjDd;AAsDAO,SAAA,GAAUf,QAAV;AAvEA,SAAA,OAAA;AAAA,CAAA,CAAA;;",
"sources":["goog/async/freelist.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Simple freelist.\n *\n * An anterative to goog.structs.SimplePool, it imposes the requirement that the\n * objects in the list contain a \"next\" property that can be used to maintain\n * the pool.\n */\ngoog.module('goog.async.FreeList');\ngoog.module.declareLegacyNamespace();\n\n/** @template ITEM */\nclass FreeList {\n  /**\n   * @param {function():ITEM} create\n   * @param {function(ITEM):void} reset\n   * @param {number} limit\n   */\n  constructor(create, reset, limit) {\n    /** @private @const {number} */\n    this.limit_ = limit;\n    /** @private @const {function()} */\n    this.create_ = create;\n    /** @private @const {function(ITEM):void} */\n    this.reset_ = reset;\n\n    /** @private {number} */\n    this.occupants_ = 0;\n    /** @private {ITEM} */\n    this.head_ = null;\n  }\n\n  /** @return {ITEM} */\n  get() {\n    let item;\n    if (this.occupants_ > 0) {\n      this.occupants_--;\n      item = this.head_;\n      this.head_ = item.next;\n      item.next = null;\n    } else {\n      item = this.create_();\n    }\n    return item;\n  }\n\n  /** @param {ITEM} item An item available for possible future reuse. */\n  put(item) {\n    this.reset_(item);\n    if (this.occupants_ < this.limit_) {\n      this.occupants_++;\n      item.next = this.head_;\n      this.head_ = item;\n    }\n  }\n\n  /**\n   * Visible for testing.\n   * @return {number}\n   * @package\n   */\n  occupants() {\n    return this.occupants_;\n  }\n}\n\nexports = FreeList;\n"],
"names":["goog","module","declareLegacyNamespace","FreeList","constructor","create","reset","limit","limit_","create_","reset_","occupants_","head_","get","item","next","put","occupants","exports"]
}
