{
"version":3,
"file":"goog.async.throwexception.js",
"lineCount":13,
"mappings":"AAAA,IAAA,CAAA,UAAA,CAAA,QAAA,CAAA,OAAA,CAAA;AAqBAA,UAASA,eAAc,CAACC,SAAD,CAAY;AAEjCC,QAAKC,CAAAA,MAAOC,CAAAA,UAAZ,CAAuB,EAAA,IAAM;AAC3B,YAAMH,SAAN;AAD2B,KAA7B,EAEG,CAFH,CAAA;AAFiC;AArBnC,cAAA;AAWAC,MAAKG,CAAAA,MAAL,CAAY,2BAAZ,CAAA;AACAH,MAAKG,CAAAA,MAAOC,CAAAA,sBAAZ,EAAA;AAeAC,SAAA,GAAUP,cAAV;AA3BA,SAAA,OAAA;AAAA,CAAA,CAAA;;",
"sources":["goog/async/throwexception.js"],
"sourcesContent":["/**\n * @license\n * Copyright The Closure Library Authors.\n * SPDX-License-Identifier: Apache-2.0\n */\n\n/**\n * @fileoverview Provides a function to throw an error without interrupting\n * the current execution context.\n */\n\ngoog.module('goog.async.throwException');\ngoog.module.declareLegacyNamespace();\n\n/**\n * Throw an item without interrupting the current execution context.  For\n * example, if processing a group of items in a loop, sometimes it is useful\n * to report an error while still allowing the rest of the batch to be\n * processed.\n * @param {*} exception\n */\nfunction throwException(exception) {\n  // Each throw needs to be in its own context.\n  goog.global.setTimeout(() => {\n    throw exception;\n  }, 0);\n}\nexports = throwException;\n"],
"names":["throwException","exception","goog","global","setTimeout","module","declareLegacyNamespace","exports"]
}
